{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "variables": {
        "ADPAdminUserName":"adpadmin",
        "ADPAdminPassword":"P@ssw0rd123!",

        "DesktopVMSize":"Standard_A4_v2",
        "SynapseSQLDWSize":"DW200c",

        "UniqueSuffix":"[uniqueString(resourceGroup().id)]",

        "ADPVirtualNetworkName": "ADPVirtualNetwork",
        "ADPVirtualNetworkIPAddressPrefix": "10.10.0.0/16",
        "ADPVirtualSubnetName": "default",
        "ADPVirtualSubnetIPAddressPrefix": "10.10.0.0/24",
        
        "ADPDesktopName":"ADPDesktop",
        "ADPDesktopNICName":"[concat(variables('ADPDesktopName'),'-nic')]",
        "ADPDesktopOSDiskName":"[concat(variables('ADPDesktopName'),'_OsDisk')]",
        "ADPDesktopPublicIPName":"[concat(variables('ADPDesktopName'),'-publicip')]",
        
        "ADPDataLakeStorageName":"[concat('synapsedatalake', substring(variables('UniqueSuffix'),0,5))]",

		"ADPOperationalSQLEndpoint": "[concat('operationalsql-', substring(variables('UniqueSuffix'),0,5))]",

        "ADPSynapseSQLEndpoint": "[concat('synapsesql-', substring(variables('UniqueSuffix'),0,5))]",
        "ADPSynapseDWName":"SynapseDW",
        "ADPSynapseDWCollation": "SQL_Latin1_General_CP1_CI_AS",

        "ADPDataFactoryName": "[concat('SynapseDataFactory-',substring(variables('UniqueSuffix'),0,5))]",
        "ADPDataFactoryLocation": "[resourceGroup().location]",

        "ADPDatabricksWorkspaceName":"[concat('ADPDatabricks-',substring(variables('UniqueSuffix'),0,5))]",
        "ADPDatabricksResourceGroupName": "[concat('Databricks-', resourceGroup().name)]", 
        "ADPDatabricksResourceGroupID": "[concat(subscription().id, '/resourceGroups/', variables('ADPDatabricksResourceGroupName'))]",
        "ADPDatabricksTier":"standard",

        "ADPComputerVisionName":"ADPComputerVision",
        "ADPComputerVisionSKU": "S1",

        "ADPEventHubsName": "[concat('ADPEventHubs-', substring(variables('UniqueSuffix'),0,5))]",
        "ADPEventHubsSKU": "Standard",
        "ADPEventHubsThroughputUnits": 1,

        "ADPStreamAnalyticsName": "[concat('SynapseStreamAnalytics-',substring(variables('UniqueSuffix'),0,5))]",
        "ADPStreamAnalyticsSKU": "Standard",

        "ADPKeyVaultName": "[concat('ADPKeyVault-',substring(variables('UniqueSuffix'),0,5))]",

        "ADPLogicAppName": "ADPLogicApp",
        "ADPCosmosDBAccountName": "[concat('adpcosmosdb-', substring(variables('UniqueSuffix'),0,5))]",
		
		"ADPBastionName": "ADPBastionHost",
		"ADPBastionPublicIPName": "[concat(variables('ADPBastionName'),'-publicip')]",
		
		"ADPIntegrationAccountName": "ADPIntegrationAccount",
		
		"ADPEventHubConnectionName": "EventHubAPIConnection",
		"ADPEventHubAuthPolicyID": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('ADPEventHubsName'), 'RootManageSharedAccessKey')]",
		"ADPEventHubsAPIVersion": "[providers('Microsoft.Eventhub','namespaces').apiVersions[0]]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('ADPVirtualNetworkName')]",
            "apiVersion": "2018-12-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('ADPVirtualNetworkIPAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "[variables('ADPVirtualSubnetIPAddressPrefix')]",
                            "delegations": []
                        }
                    },
					{
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "10.10.100.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('ADPVirtualNetworkName'), '/', variables('ADPVirtualSubnetName'))]",
            "apiVersion": "2019-09-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "[variables('ADPVirtualSubnetIPAddressPrefix')]",
                "delegations": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('ADPVirtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(variables('ADPVirtualNetworkName'), '/', '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('ADPVirtualNetworkName'))]"
            ],
            "properties": {
                "addressPrefix": "10.10.100.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[variables('ADPDesktopPublicIPName')]",
            "apiVersion": "2018-12-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            },
            "dependsOn": []
        },
		{
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[variables('ADPBastionPublicIPName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "ipAddress": "20.188.223.148",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-09-01",
            "name": "[variables('ADPBastionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "dnsName": "[concat('bst-',guid(subscription().subscriptionId),'.bastion.azure.com')]",
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('ADPBastionPublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('ADPVirtualNetworkName')), '/subnets/AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            },
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', variables('ADPVirtualNetworkName'))]"
			]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('ADPDesktopNICName')]",
            "apiVersion": "2018-12-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ADPDesktopPublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('ADPVirtualNetworkName'), variables('ADPVirtualSubnetName'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "primary": true,
                "tapConfigurations": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('ADPDesktopPublicIPName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('ADPVirtualNetworkName'), variables('ADPVirtualSubnetName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "name": "[variables('ADPDataLakeStorageName')]",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "isHnsEnabled": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[variables('ADPSynapseSQLEndpoint')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "administratorLogin": "[variables('ADPAdminUserName')]",
                "administratorLoginPassword": "[variables('ADPAdminPassword')]",
                "version": "12.0"
            },
            "dependsOn": [],
			"resources":[
				{
					"type": "firewallrules",
					"name": "AllowAllAzureIps",
					"location": "[resourceGroup().location]",
					"apiVersion": "2015-05-01-preview",
					"dependsOn": [
						"[variables('ADPSynapseSQLEndpoint')]"
					],
					"properties": {
						"startIpAddress": "0.0.0.0",
						"endIpAddress": "0.0.0.0"
					}
				}
			]
        },
		{
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[variables('ADPOperationalSQLEndpoint')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "administratorLogin": "[variables('ADPAdminUserName')]",
                "administratorLoginPassword": "[variables('ADPAdminPassword')]",
                "version": "12.0"
            },
            "dependsOn": [],
			"resources":[
				{
					"type": "firewallrules",
					"name": "AllowAllAzureIps",
					"location": "[resourceGroup().location]",
					"apiVersion": "2015-05-01-preview",
					"dependsOn": [
						"[variables('ADPOperationalSQLEndpoint')]"
					],
					"properties": {
						"startIpAddress": "0.0.0.0",
						"endIpAddress": "0.0.0.0"
					}
				}
			]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "name": "[concat(variables('ADPSynapseSQLEndpoint'), '/AllowAllWindowsAzureIps')]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('ADPSynapseSQLEndpoint'))]"
            ]
        },
		{
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2017-10-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {},
            "name": "[concat(variables('ADPOperationalSQLEndpoint'), '/NYCDataSets')]",
			"kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 1073741824,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "readReplicaCount": 0
            },
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 20
            },
			"dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('ADPOperationalSQLEndpoint'))]"
            ],
			"resources": [
				{
					"name": "Import",
					"type": "extensions",
					"apiVersion": "2014-04-01",
					"dependsOn": [
						"[resourceId('Microsoft.Sql/servers/databases', variables('ADPOperationalSQLEndpoint'), 'NYCDataSets')]"
					],
					"properties": {
						"storageKeyType": "SharedAccessKey",
						"storageKey": "?sv=2018-03-28&ss=b&srt=sco&sp=rwl&se=2050-12-30T17:25:52Z&st=2019-04-05T09:25:52Z&spr=https&sig=4qrD8NmhaSmRFu2gKja67ayohfIDEQH3LdVMa2Utykc%3D",
						"storageUri": "https://mdwresources.blob.core.windows.net/nycdatasets/NYCDataSets.bacpac",
						"administratorLogin": "[variables('ADPAdminUserName')]",
						"administratorLoginPassword": "[variables('ADPAdminPassword')]",
						"operationMode": "Import"
					}
				}
			]
        },
        {
            "apiVersion": "2018-06-01",
            "name": "[variables('ADPDataFactoryName')]",
            "location": "[variables('ADPDataFactoryLocation')]",
            "type": "Microsoft.DataFactory/factories",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {}
        },
        {
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "name": "[variables('ADPDatabricksWorkspaceName')]",
            "sku": {
                "name": "[variables('ADPDatabricksTier')]"
            },
            "comments": "Please do not use an existing resource group for ManagedResourceGroupId.",
            "properties": {
                "ManagedResourceGroupId": "[variables('ADPDatabricksResourceGroupID')]"
            },
            "type": "Microsoft.Databricks/workspaces"
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "[variables('ADPComputerVisionSKU')]"
            },
            "kind": "ComputerVision",
            "name": "[variables('ADPComputerVisionName')]",
            "apiVersion": "2016-02-01-preview",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {},
            "dependsOn": []
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "sku": {
                "name": "[variables('ADPEventHubsSKU')]",
                "tier": "[variables('ADPEventHubsSKU')]",
                "capacity": "[variables('ADPEventHubsThroughputUnits')]"
            },
            "name": "[variables('ADPEventHubsName')]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0
            },
            "dependsOn": [],
			"resources": [
				{
					"type": "Microsoft.EventHub/namespaces/AuthorizationRules",
					"apiVersion": "2017-04-01",
					"name": "[concat(variables('ADPEventHubsName'), '/RootManageSharedAccessKey')]",
					"location": "[resourceGroup().location]",
					"dependsOn": [
						"[resourceId('Microsoft.EventHub/namespaces', variables('ADPEventHubsName'))]"
					],
					"properties": {
						"rights": [
							"Listen",
							"Manage",
							"Send"
						]
					}
				},
				{
					"type": "Microsoft.EventHub/namespaces/eventhubs",
					"apiVersion": "2017-04-01",
					"name": "[concat(variables('ADPEventHubsName'), '/nysestocktrade')]",
					"location": "Australia East",
					"dependsOn": [
						"[resourceId('Microsoft.EventHub/namespaces', variables('ADPEventHubsName'))]"
					],
					"properties": {
						"messageRetentionInDays": 1,
						"partitionCount": 1,
						"status": "Active"
					}
				}
			]
        },
		{
            "type": "Microsoft.Logic/integrationAccounts",
            "apiVersion": "2016-06-01",
            "name": "[variables('ADPIntegrationAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "state": "Enabled"
            }
        },
		{
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ADPEventHubConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('ADPEventHubConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId ,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/eventhubs')]"
                },
				"parameterValues":{
					"connectionString": "[listkeys(variables('ADPEventHubAuthPolicyID'), '2017-04-01').primaryConnectionString]"
				}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[variables('ADPCosmosDBAccountName')]",
            "apiVersion": "2015-04-08",
            "location": "[resourceGroup().location]",
            "tags": {
                "defaultExperience": "Core (SQL)"
            },
            "scale": null,
            "properties": {
                "ipRangeFilter": "",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": true,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0
                    }
                ],
                "capabilities": []
            },
            "dependsOn": []
        }
    ]
}